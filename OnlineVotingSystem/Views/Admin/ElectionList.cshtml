
@{
    ViewData["Title"] = "Election Management";


    string fromDateValue = Context.Request.Query.ContainsKey("fromDate")
        ? Context.Request.Query["fromDate"].ToString()
        : DateTime.Now.AddMonths(-12).ToString("yyyy-MM-dd");

    string toDateValue = Context.Request.Query.ContainsKey("toDate")
        ? Context.Request.Query["toDate"].ToString()
        : DateTime.Now.ToString("yyyy-MM-dd");
}


@model IEnumerable<OnlineVotingSystem.Models.ViewModels.ElectionViewModel>


<div class="container mt-4">
    <div class="text-center">
        <h2 class="fw-bold"><i class="fa-solid fa-landmark"></i> Election Management</h2>
    </div>
    <hr>
    <div class="row">
        <div class="col-12">
            <div class="d-flex flex-wrap justify-content-between align-items-end mb-3">
                <form method="get" action="@Url.Action("ElectionList", "Admin")" class="row g-2 w-100">
                    <div class="col-12 col-md-3">
                        <label for="fromDate" class="form-label">From Date:</label>
                        <input type="date" id="fromDate" name="fromDate" class="form-control" value="@fromDateValue">
                    </div>
                    <div class="col-12 col-md-3">
                        <label for="toDate" class="form-label">To Date:</label>
                        <input type="date" id="toDate" name="toDate" class="form-control" value="@toDateValue">
                    </div>

                    <div class="col-12 col-md-3">
                        <label for="statusId" class="form-label">Status:</label>
                        @Html.DropDownList("statusId", ViewBag.StatusList as IEnumerable<SelectListItem>, new { @class = "form-control" })
                    </div>

                    <div class="col-12 col-md-3 d-flex align-items-end mt-3">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-search" style="margin-right: 5px;"></i> Search
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <p class="text-center font-weight-bolder">Total Rows: @Model.Count().ToString("#,##0")</p>
    <a asp-action="CreateNewElection" class="btn btn-primary btn-md mb-3">
        <i class="fa-solid fa-plus"></i> Create New Election
    </a>

    <div id="sortTable" class="table-responsive">
        <table class="table table-hover table-bordered text-center align-middle">
            <thead style="background-color: #000; color: #fff;">
                <tr>
                    <th id="sortTableHeader1" class="sortTableHeader" style="width: 13%;">Election ID</th>
                    <th id="sortTableHeader2" class="sortTableHeader">Election Name</th>
                    <th id="sortTableHeader3" class="sortTableHeader">Status</th>
                    <th id="sortTableHeader4" class="sortTableHeader" style="width: 120px;">Start Date Time</th>
                    <th id="sortTableHeader5" class="sortTableHeader" style="width: 120px;">End Date Time</th>
                    <th style="width: 20%;">Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                @foreach (var election in Model)
                            {
                                string backgroundColor = "";
                                string textColor = "";
                                if (election.Status == "Upcoming")
                                {
                                    backgroundColor = "yellow";
                                    textColor = "black";
                                }
                                else if (election.Status == "Ongoing")
                                {
                                    backgroundColor = "blue";
                                }
                                else if (election.Status == "Completed")
                                {
                                    backgroundColor = "green";
                                }

                                if (election.Status == "Ongoing" || election.Status == "Completed") textColor = "white";

                <tr>
                    <td>@election.ID</td>
                    <td>@election.Name</td>
                    <td style="background-color: @backgroundColor; color : @textColor;">@election.Status</td>
                    <td>@election.StartDateTime.ToString("MM/dd/yyyy hh:mm tt")</td>
                    <td>@election.EndDateTime.ToString("MM/dd/yyyy hh:mm tt")</td>

                    @if (election.Status != "Upcoming")
                                    {
                    <td class="disabled-action">
                        ⚠ You cannot edit this @election.Status Election
                    </td>
                                    }
                                    else
                                    {


                    <td>
                            <a href="@Url.Action("EditElection", "Admin", new { electionId = election.ID })" class="btn btn-primary btn-md mr-lg-2 mb-2 mb-lg-0">
                                <i class="fa-solid fa-pencil"></i> Edit
                            </a>

                            <a href="@Url.Action("DeleteElection", "Admin", new { electionId = election.ID })" class="btn btn-danger btn-md">
                                <i class="fa-solid fa-trash"></i> Delete
                            </a>
                    </td>

                                    }

                </tr>
                            }
                }
                else
                {
                <tr>
                    <td colspan="7" class="text-center fw-bold text-muted">No Records Found</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<br>