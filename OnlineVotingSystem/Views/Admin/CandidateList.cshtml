
@{
    ViewData["Title"] = "Candidate Management";

    string fromDateValue = Context.Request.Query.ContainsKey("fromDate")
    ? Context.Request.Query["fromDate"].ToString()
    : DateTime.Now.AddMonths(-12).ToString("yyyy-MM-dd");

    string toDateValue = Context.Request.Query.ContainsKey("toDate")
        ? Context.Request.Query["toDate"].ToString()
        : DateTime.Now.ToString("yyyy-MM-dd");

}


@model IEnumerable<OnlineVotingSystem.Models.ViewModels.CandidateViewModel>


<div class="container mt-4">
    <div class="text-center">
        <h2 class="fw-bold"><i class="fa-solid fa-users"></i> Candidate Management</h2>
    </div>
    <hr>

    <div class="row">
        <div class="col-12">
            <div class="d-flex flex-wrap justify-content-between align-items-end mb-3">
                <form method="get" asp-action="CandidateList" asp-controller="Admin" class="row g-2 w-100">
                    <div class="col-12 col-md-3">
                        <label for="fromDate" class="form-label">From Date:</label>
                        <input type="date" id="fromDate" name="fromDate" class="form-control" value="@fromDateValue">
                    </div>
                    <div class="col-12 col-md-3">
                        <label for="toDate" class="form-label">To Date:</label>
                        <input type="date" id="toDate" name="toDate" class="form-control" value="@toDateValue">
                    </div>

                    <div class="col-12 col-md-3">
                        <label for="statusId" class="form-label">Status:</label>
                        @Html.DropDownList("statusId", ViewBag.StatusList as IEnumerable<SelectListItem>, new { @class = "form-control" })
                    </div>

                    <div class="col-12 col-md-3 d-flex align-items-end mt-3">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-search" style="margin-right: 5px;"></i> Search
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <p class="text-center font-weight-bolder">Total Rows: @Model.Count().ToString("#,##0")</p>

    <a asp-action="CreateNewCandidate" class="btn btn-primary btn-md mb-3">
        <i class="fa-solid fa-plus"></i> Create New Candidate
    </a>

    <div class="table-responsive">
        <table id="sortTable" class="table table-hover table-bordered text-center align-middle">
            <thead style="background-color: #000; color: #fff;">
                <tr>
                    <th id="sortTableHeader1" class="sortTableHeader" style="width: 13%;">Candidate ID</th>
                    <th id="sortTableHeader2" class="sortTableHeader">Candidate Name</th>
                    <th id="sortTableHeader3" class="sortTableHeader">Description</th>
                    <th id="sortTableHeader4" class="sortTableHeader">Election Name</th>
                    <th id="sortTableHeader5" class="sortTableHeader">Election Status</th>
                    <th style="width: 20%;">Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var candidate in Model)
                    {
                        string backgroundColor = "";
                        string textColor = "";
                        if (candidate.ElectionStatus == "Upcoming")
                        {
                            backgroundColor = "yellow";
                            textColor = "black";
                        }
                        else if (candidate.ElectionStatus == "Ongoing")
                        {
                            backgroundColor = "blue";
                        }
                        else if (candidate.ElectionStatus == "Completed")
                        {
                            backgroundColor = "green";
                        }

                        if (candidate.ElectionStatus == "Ongoing" || candidate.ElectionStatus == "Completed") textColor = "white";

                        <tr>
                            <td>@candidate.ID</td>
                            <td>@candidate.Name</td>
                            <td>@candidate.Description</td>
                            <td>@candidate.ElectionName</td>
                            <td style="background-color: @backgroundColor; color : @textColor;">@candidate.ElectionStatus</td>

                            @if (candidate.ElectionStatus != "Upcoming")
                            {
                                <td class="disabled-action">
                                    ⚠ You cannot edit this, because the Election Status is @candidate.ElectionStatus
                                </td>
                            }
                            else
                            {
                                <td>
                                    <a href="@Url.Action("EditCandidate", "Admin", new { candidateId = candidate.ID })" class="btn btn-primary btn-md mr-lg-2 mb-2 mb-lg-0">
                                        <i class="fa-solid fa-pencil"></i> Edit
                                    </a>
                                    <a href="@Url.Action("DeleteCandidate", "Admin", new { candidateId = candidate.ID })" class="btn btn-danger btn-md">
                                        <i class="fa-solid fa-trash"></i> Delete
                                    </a>
                                </td>
                            }

                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7" class="text-center fw-bold text-muted">No Records Found</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<br>